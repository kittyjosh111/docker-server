version: "3"

networks:
  default:
    name: npm_default
    external: true

services:

  invidious:
    image: quay.io/invidious/invidious:latest-arm64 # ARM64/AArch64 devices
    restart: unless-stopped
    ports:
      - "127.0.0.1:3000:3000"
    environment:
      # Please read the following file for a comprehensive list of all available
      # configuration options and their associated syntax:
      # https://github.com/iv-org/invidious/blob/master/config/config.example.yml
      INVIDIOUS_CONFIG: |
        db:
          dbname: invidious
          user: kemal
          password: kemal
          host: invidious-db
          port: 5432
        check_tables: true
        statistics_enabled: true
        popular_enabled: false
        captcha_enabled: true
        enable_user_notifications: false
        default_user_preferences:
          default_home: Search
          feed_menu: ["Trending", "Subscriptions", "Playlists"]
          comments: ["youtube", "reddit"]
          quality: dash
          quality_dash: best
          save_player_pos: true
          autoplay: true
          continue_autoplay: true
          continue: false
          automatic_instance_redirect: true
          max_results: 50
          local: true
        # external_port: 5299
        # domain:
        # https_only: false
        # statistics_enabled: false
        hmac_key: ""
    healthcheck:
      test: wget -nv --tries=1 --spider http://127.0.0.1:3000/api/v1/comments/jNQXAC9IVRw || exit 1
      interval: 30s
      timeout: 5s
      retries: 2
    logging:
      options:
        max-size: "1G"
        max-file: "4"
    depends_on:
      - invidious-db

  invidious-db:
    image: docker.io/library/postgres:14
    restart: unless-stopped
    volumes:
      - postgresdata:/var/lib/postgresql/data
      - ./config/sql:/config/sql
      - ./docker/init-invidious-db.sh:/docker-entrypoint-initdb.d/init-invidious-db.sh
    environment:
      POSTGRES_DB: invidious
      POSTGRES_USER: kemal
      POSTGRES_PASSWORD: kemal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]

volumes:
  postgresdata:
